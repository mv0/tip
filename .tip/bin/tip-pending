#!/bin/bash

print_sum () {
  printf "  total topics:    %4d\n" $TOTAL
  printf "  pending topics:  %4d\n" $NR
  printf "  pending commits: %4d\n" $SUM
}

echo
echo "  topic                              #commits"
echo "  -------------------------------------------"

[ "$#" != "0" ] && BRANCHES=$(tip-topic-branches | grep $@) ||
  BRANCHES=$(tip-topic-branches)

NR=0
TOTAL=0
SUM=0
for B in $BRANCHES; do
 C1=$(git log-line --no-merges linus..$B | wc -l)
# C2=$(git log-line --no-merges linux-next..$B | wc -l)


 [ "$C1" != "0" ] && {
   printf "  %-35s: %6d\n" $B $C1
   ((NR++))
 }
 ((TOTAL++))
 ((SUM+=C1))
done

echo "  ---------------------"

[ "$#" != "0" ] && { print_sum; exit 0; }

for B in $(tip-auto-branches | grep -vw auto-latest ); do
 C1=$(git log-line --no-merges linus..$B | wc -l)
# C2=$(git log-line --no-merges linux-next..$B | wc -l)


 [ "$C1" != "0" ] && {
   printf "  %-35s: %6d\n" $B $C1
 }
done

echo "  ---------------------"

for B in auto-latest; do
 C1=$(git log-line --no-merges linus..$B | wc -l)
# C2=$(git log-line --no-merges linux-next..$B | wc -l)


 [ "$C1" != "0" ] && {
   printf "  %-35s: %6d\n" $B $C1
 }
done

echo "  ---------------------"

for B in $(tip-auto-branches | grep urgent ); do
 C1=$(git log-line --no-merges linus..$B | wc -l)
# C2=$(git log-line --no-merges linux-next..$B | wc -l)


 [ "$C1" != "0" ] && {
   printf "  %-35s: %6d\n" $B $C1
 }
done

echo "  ---------------------"

print_sum

P=$(for N in $BRANCHES; do git log-line linus..$N; done | sort | uniq | wc -l)
printf "  unique commits:  %4d\n" $P
